name: Validate
on:
  pull_request:
    branches:
      - main
jobs:
  init:
    name: Initialize
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: fetch last version of the PR branch
        run: git fetch origin ${GITHUB_HEAD_REF} && git checkout ${GITHUB_HEAD_REF}
      - name: Get Files Changes Info
        id: info
        uses: ./.github/actions/files-change-info
    outputs:
      terraform-changes: ${{ steps.info.outputs.terraform-changes }}
      apps-changes: ${{ steps.info.outputs.apps-changes }}
      app-matrix: ${{ steps.info.outputs.app-list-changes}}

  terraform-plan-nonprod:
    name: Terraform Plan NONPROD
    runs-on: ubuntu-20.04
    needs:
      - init
    if: |
      always()
      && needs.init.outputs.terraform-changes == 'true'
      && needs.init.outputs.last-author != 'fiebel-cicd'
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
      - name: fetch branch
        run: git fetch origin ${GITHUB_HEAD_REF} && git checkout ${GITHUB_HEAD_REF}
      - name: terraform plan
        uses: ./.github/actions/terraform/plan
        with:
          gcp-service-account-key: ${{ secrets.GCP_NONPROD_CREDENTIALS }}
          terraform-version: 1.1.7
          tf-api-token: ${{ secrets.TF_API_TOKEN }}
          environment: nonprod
          slack-secret: ${{ secrets.SLACK_SECRET }}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,eventName,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ENG_WEBHOOK_URL }}
        if: always()

  build-and-push-image-nonprod:
    name: Build and Push Image NonProd
    runs-on: ubuntu-20.04
    needs:
      - init
      - terraform-plan-nonprod
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.init.outputs.app-matrix) }}
      max-parallel: 1
    if: |
      always() 
      && needs.init.outputs.apps-changes == 'true'
      && needs.terraform-plan-nonprod.result != 'failure'
      && needs.init.outputs.last-author != 'ki-cicd'
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.0
      - name: fetch branch
        run: git fetch origin ${GITHUB_HEAD_REF} && git checkout ${GITHUB_HEAD_REF}
      - name: generate image tag
        id: tag
        run: | 
          SHA="${{ github.event.pull_request.head.sha }}"
          TAG="$(date '+%Y-%m-%d')_${GITHUB_RUN_NUMBER}_${SHA:0:7}"
          echo "::set-output name=value::$TAG"
      - name: push image
        uses: ./.github/actions/docker/push
        with:
          gcp-service-account-key: ${{ secrets.GCP_NONPROD_CREDENTIALS }}
          image-tag: ${{ steps.tag.outputs.value }}
          image-name: ${{ matrix.app }}
          registry-project: fiebel-video-nonprod
          repository-name: nonprod-app-repository
          registry-name: europe-west2-docker.pkg.dev
          working-directory: apps/${{ matrix.app }}
      - name: update api images
        uses: ./.github/actions/terraform/update
        with:
          image-tag: ${{ steps.tag.outputs.value }}
          image-name: ${{ matrix.app }}
          environment: nonprod